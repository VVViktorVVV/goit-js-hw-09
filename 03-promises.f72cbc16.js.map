{"mappings":"siBAGA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,UACnC,IAAIE,EAAeH,SAASC,cAAc,kBACtCG,EAAcJ,SAASC,cAAc,iBACrCI,EAAUL,SAASC,cAAc,mBAErCF,EAAKO,iBAAiB,UAAUC,IAAOA,EAAEC,oBAEzC,IAAIC,EAAa,EAEbC,EAAS,EACTC,EAAc,EAGlBT,EAAII,iBAAiB,oBAkBnBK,EAAcC,aAAW,SAfJC,EAAUC,EAiB7BJ,GAAU,EACVD,IAAeL,EAAYW,MAEZ,IAAXL,IACFD,IAAeN,EAAaY,OAGzBL,KAAYL,EAAQU,OACvBC,cAAcL,IAzBGE,EA4BLH,EA5BeI,EA4BPL,EA3BjB,IAAIQ,SAAO,CAAEC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAU,KACJH,EACFF,EAAQ,UAAEL,QAAUC,IAEpBK,EAAO,UAAEN,QAAUC,MAEpBA,OAmBFU,MAAI,EAAGX,SAACA,EAAQC,MAAEA,MACnBW,EAAAC,GAASC,OAAOC,QAAO,qBAAsBf,QAAeC,UAE3De,OAAK,EAAGhB,SAACA,EAAQC,MAAEA,MACpBW,EAAAC,GAASC,OAAOG,QAAO,oBAAqBjB,QAAeC,YAG1DV,EAAYW,OAEfN,EAAa,EACbC,EAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\nlet firstDelayEl = document.querySelector('[name=\"delay\"]')\nlet stepDelayEl = document.querySelector('[name=\"step\"]')\nlet amounEL = document.querySelector('[name=\"amount\"]')\n\nform.addEventListener('submit', e => { e.preventDefault(); });\n\nlet delayCount = 0;\nlet step = 0;\nlet amount = 0;\nlet countResult = 0\n\n\nbtn.addEventListener('click', onSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }) ;\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit() {\n  countResult = setInterval(() => {\n    \n    amount += 1;\n    delayCount += +stepDelayEl.value;\n    \n    if (amount === 1) {\n      delayCount += +firstDelayEl.value;\n    }\n\n     if (amount === +amounEL.value) {\n      clearInterval(countResult);\n    }\n\n    createPromise(amount, delayCount)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n   })\n    .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n      \n  }, stepDelayEl.value)\n  \n  delayCount = 0;\n  amount = 0;\n\n}\n\n\n\n\n\n"],"names":["$e2fa2d3ea8c059a8$var$form","document","querySelector","$e2fa2d3ea8c059a8$var$btn","$e2fa2d3ea8c059a8$var$firstDelayEl","$e2fa2d3ea8c059a8$var$stepDelayEl","$e2fa2d3ea8c059a8$var$amounEL","addEventListener","e","preventDefault","$e2fa2d3ea8c059a8$var$delayCount","$e2fa2d3ea8c059a8$var$amount","$e2fa2d3ea8c059a8$var$countResult","setInterval","position","delay","value","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","$i27Ug","Notify","success","catch","failure"],"version":3,"file":"03-promises.f72cbc16.js.map"}