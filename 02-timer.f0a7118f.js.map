{"mappings":"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","sources":["node_modules/flatpickr/dist/esm/types/options.js","node_modules/flatpickr/dist/esm/l10n/default.js","node_modules/flatpickr/dist/esm/utils/index.js","node_modules/flatpickr/dist/esm/utils/dom.js","node_modules/flatpickr/dist/esm/utils/formatting.js","node_modules/flatpickr/dist/esm/utils/dates.js","node_modules/flatpickr/dist/esm/utils/polyfills.js","node_modules/flatpickr/dist/esm/index.js","src/js/02-timer.js"],"sourcesContent":["export const HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport const defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n    getWeek: (givenDate) => {\n        const date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export const english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: (nth) => {\n        const s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export const pad = (number, length = 2) => `000${number}`.slice(length * -1);\nexport const int = (bool) => (bool === true ? 1 : 0);\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\nexport const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    const e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (const key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            const path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n    const locale = overrideLocale || l10n;\n    if (config.formatDate !== undefined && !isMobile) {\n        return config.formatDate(dateObj, frmt, locale);\n    }\n    return frmt\n        .split(\"\")\n        .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n        ? formats[c](dateObj, locale, config)\n        : c !== \"\\\\\"\n            ? c\n            : \"\")\n        .join(\"\");\n};\nexport const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n    if (date !== 0 && !date)\n        return undefined;\n    const locale = customLocale || l10n;\n    let parsedDate;\n    const dateOrig = date;\n    if (date instanceof Date)\n        parsedDate = new Date(date.getTime());\n    else if (typeof date !== \"string\" &&\n        date.toFixed !== undefined)\n        parsedDate = new Date(date);\n    else if (typeof date === \"string\") {\n        const format = givenFormat || (config || defaults).dateFormat;\n        const datestr = String(date).trim();\n        if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n        }\n        else if (/Z$/.test(datestr) ||\n            /GMT$/.test(datestr))\n            parsedDate = new Date(date);\n        else if (config && config.parseDate)\n            parsedDate = config.parseDate(date, format);\n        else {\n            parsedDate =\n                !config || !config.noCalendar\n                    ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                    : new Date(new Date().setHours(0, 0, 0, 0));\n            let matched, ops = [];\n            for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                const token = format[i];\n                const isBackSlash = token === \"\\\\\";\n                const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                if (tokenRegex[token] && !escaped) {\n                    regexStr += tokenRegex[token];\n                    const match = new RegExp(regexStr).exec(date);\n                    if (match && (matched = true)) {\n                        ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                            fn: revFormat[token],\n                            val: match[++matchIndex],\n                        });\n                    }\n                }\n                else if (!isBackSlash)\n                    regexStr += \".\";\n                ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n            }\n            parsedDate = matched ? parsedDate : undefined;\n        }\n    }\n    if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n        config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n        return undefined;\n    }\n    if (timeless === true)\n        parsedDate.setHours(0, 0, 0, 0);\n    return parsedDate;\n};\nexport function compareDates(date1, date2, timeless = true) {\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport const isBetween = (ts, ts1, ts2) => {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport const duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    let hours = config.defaultHour;\n    let minutes = config.defaultMinute;\n    let seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        const minHour = config.minDate.getHours();\n        const minMinutes = config.minDate.getMinutes();\n        const minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        const maxHr = config.maxDate.getHours();\n        const maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours, minutes, seconds };\n}\n","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n","import { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nconst DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    const self = {\n        config: Object.assign(Object.assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self._createElement = createElement;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        const config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            const defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            const defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        const prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        const limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        const limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (limitMaxHours) {\n            const maxTime = self.config.maxTime !== undefined\n                ? self.config.maxTime\n                : self.config.maxDate;\n            hours = Math.min(hours, maxTime.getHours());\n            if (hours === maxTime.getHours())\n                minutes = Math.min(minutes, maxTime.getMinutes());\n            if (minutes === maxTime.getMinutes())\n                seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n        if (limitMinHours) {\n            const minTime = self.config.minTime !== undefined\n                ? self.config.minTime\n                : self.config.minDate;\n            hours = Math.max(hours, minTime.getHours());\n            if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                minutes = minTime.getMinutes();\n            if (minutes === minTime.getMinutes())\n                seconds = Math.max(seconds, minTime.getSeconds());\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        const date = dateObj || self.latestSelectedDateObj;\n        if (date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        const eventTarget = getEventTarget(event);\n        const year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach((ev) => bind(element, ev, handler, options));\n        if (element instanceof Array)\n            return element.forEach((el) => bind(el, event, handler, options));\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: () => element.removeEventListener(event, handler),\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        const debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", (e) => {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            const selText = (e) => getEventTarget(e).select();\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", (e) => {\n                    updateTime(e);\n                    triggerChange();\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        const jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        const oldYear = self.currentYear;\n        const oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        const eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        const target = e && getEventTarget(e);\n        const input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        const event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        const fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                const { weekWrapper, weekNumbers } = buildWeeks();\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        const customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, dayNumber, i) {\n        const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            dayNumber % 7 === 1) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (let m = startMonth; m != endMonth; m += delta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = delta > 0 ? 0 : month.children.length - 1;\n            const endIndex = delta > 0 ? month.children.length : -1;\n            for (let i = startIndex; i != endIndex; i += delta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        const givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        const loopDelta = delta > 0 ? 1 : -1;\n        for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            const numMonthDays = month.children.length;\n            for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        const dayFocused = isInView(document.activeElement || document.body);\n        const startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? document.activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        const dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        const frag = document.createDocumentFragment();\n        for (let i = 0; i < self.config.showMonths; i++) {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        const shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (let i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        const container = createElement(\"div\", \"flatpickr-month\");\n        const monthNavFragment = window.document.createDocumentFragment();\n        let monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", (e) => {\n                const target = getEventTarget(e);\n                const selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container,\n            yearElement,\n            monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (let m = self.config.showMonths; m--;) {\n            const month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: () => self.__hidePrevMonthArrow,\n            set(bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: () => self.__hideNextMonthArrow,\n            set(bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        const defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        const hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        const minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            const secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (let i = self.config.showMonths; i--;) {\n            const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        const firstDayOfWeek = self.l10n.firstDayOfWeek;\n        let weekdays = [...self.l10n.weekdays.shorthand];\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = [\n                ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                ...weekdays.splice(0, firstDayOfWeek),\n            ];\n        }\n        for (let i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper,\n            weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset = true) {\n        const delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent = true, toInitial = true) {\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            const { hours, minutes, seconds } = getDefaultHours(self.config);\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (let i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                const wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach((k) => {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\n            return true;\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            const eventTarget = getEventTarget(e);\n            const isCalendarElement = isCalendarElem(eventTarget);\n            const isInput = eventTarget === self.input ||\n                eventTarget === self.altInput ||\n                self.element.contains(eventTarget) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            const lostFocus = e.type === \"blur\"\n                ? isInput &&\n                    e.relatedTarget &&\n                    !isCalendarElem(e.relatedTarget)\n                : !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n            const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n            if (lostFocus && isIgnored) {\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1) {\n                    self.clear(false);\n                    self.redraw();\n                }\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless = true) {\n        var _a;\n        const dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (let i = 0, d; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                const parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        const isInput = e.target === self._input;\n        if (isInput &&\n            (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        const eventTarget = getEventTarget(e);\n        const isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        const allowInput = self.config.allowInput;\n        const allowKeydown = self.isOpen && (!allowInput || !isInput);\n        const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            const isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (document.activeElement && isInView(document.activeElement)))) {\n                            const delta = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    const delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        const elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter((x) => x);\n                        const i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            const target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(\"flatpickr-day\") ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        const hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        let containsDisabled = false;\n        let minRange = 0, maxRange = 0;\n        for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        for (let m = 0; m < self.config.showMonths; m++) {\n            const month = self.daysContainer.children[m];\n            for (let i = 0, l = month.children.length; i < l; i++) {\n                const dayElem = month.children[i], date = dayElem.dateObj;\n                const timestamp = date.getTime();\n                const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                        dayElem.classList.remove(c);\n                    });\n                    continue;\n                }\n                else if (containsDisabled && !outOfRange)\n                    continue;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            }\n        }\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement = self._positionElement) {\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                const eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        const wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(() => self.hourElement.select(), 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return (date) => {\n            const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n            const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        const boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        const formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: () => self.config._enable,\n            set: (dates) => {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: () => self.config._disable,\n            set: (dates) => {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        const timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: () => self.config._minDate,\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: () => self.config._maxDate,\n            set: minMaxDateSetter(\"max\"),\n        });\n        const minMaxTimeSetter = (type) => (val) => {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: () => self.config._minTime,\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: () => self.config._maxTime,\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (let i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (let i = 0; i < self.config.plugins.length; i++) {\n            const pluginConf = self.config.plugins[i](self) || {};\n            for (const key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n        self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n        const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        const positionElement = customPositionElement || self._positionElement;\n        const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        const top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        let left = window.pageXOffset + inputBounds.left;\n        let isCenter = false;\n        let isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        const right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = `${top}px`;\n        if (!rightMost) {\n            self.calendarContainer.style.left = `${left}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = `${right}px`;\n        }\n        else {\n            const doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            const bodyWidth = window.document.body.offsetWidth;\n            const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            const centerBefore = \".flatpickr-calendar.centerMost:before\";\n            const centerAfter = \".flatpickr-calendar.centerMost:after\";\n            const centerIndex = doc.cssRules.length;\n            const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n            self.calendarContainer.style.left = `${centerLeft}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        let editableSheet = null;\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i];\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const isSelectable = (day) => day.classList &&\n            day.classList.contains(\"flatpickr-day\") &&\n            !day.classList.contains(\"flatpickr-disabled\") &&\n            !day.classList.contains(\"notAllowed\");\n        const t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        const target = t;\n        const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            const selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            const isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            const single = self.config.mode === \"single\" && !self.config.enableTime;\n            const range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    const CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        clickOpens: [\n            () => {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (const key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach((x) => x());\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach((x) => x());\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        let dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map((d) => self.parseDate(d, format));\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n    }\n    function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map((rule) => {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter((x) => x);\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        const preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        const inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", (e) => {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        const hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (let i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        const e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (let i = 0; i < self.selectedDates.length; i++) {\n            if (compareDates(self.selectedDates[i], date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach((yearElement, i) => {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(format) {\n        return self.selectedDates\n            .map((dObj) => self.formatDate(dObj, format))\n            .filter((d, i, arr) => self.config.mode !== \"range\" ||\n            self.config.enableTime ||\n            arr.indexOf(d) === i)\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange = true) {\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        const eventTarget = getEventTarget(e);\n        const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        const isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        let newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    const nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter((x) => x instanceof HTMLElement);\n    const instances = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: Object.assign({}, English),\n    default: Object.assign({}, English),\n};\nflatpickr.localize = (l10n) => {\n    flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = (config) => {\n    flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport Notiflix from 'notiflix';\n\nconst input = document.querySelector('#datetime-picker');\n\nconst btnStart = document.querySelector('[data-start]');\nbtnStart.disabled = true;\n\nconst daysEl = document.querySelector('.value[data-days]');\nconst hoursEl = document.querySelector('.value[data-hours]');\nconst minutesEl = document.querySelector('.value[data-minutes]');\nconst secondsEl = document.querySelector('.value[data-seconds]');\n\nlet endTime = 0;\nlet inequalityTime = 0;\nlet timerId = null;\n\n\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    \n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      return Notiflix.Notify.warning('Please choose a date in the future');  \n    } else {\n       btnStart.disabled = false;\n    }\n\n    endTime = selectedDates[0].getTime();\n     \n   \n    },\n};\n\n\nflatpickr(\"#datetime-picker\", options);\n\nbtnStart.addEventListener('click', timerToStart);\n\nfunction timerToStart() {\n  btnStart.disabled = true;\n  input.disabled = true;\n\n    \n\n  timerId = setInterval(() => {\n    const inMomentTime = new Date().getTime();\n    inequalityTime = endTime - inMomentTime;\n\n    if (inequalityTime < 0) {\n      input.disabled = false;\n      btnStart.disabled = false;\n      clearInterval(timerId);\n      return;\n    }\n    \n    const { days, hours, minutes, seconds } = convertMs(inequalityTime);\n   \n    daysEl.textContent = days;\n    hoursEl.textContent = hours;\n    minutesEl.textContent = minutes;\n    secondsEl.textContent = seconds;\n\n    \n  }, 1000)\n\n\n};\n\n\nfunction convertMs(ms) {\n  \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = pad(Math.floor(ms / day));\n  const hours = pad(Math.floor((ms % day) / hour));\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\n\nfunction pad (value) {\n  return String(value).padStart(2, '0');\n}\n\n"],"names":["$8a46ef876ddc7d22$export$c34bb18505e1e253","$8a46ef876ddc7d22$export$ebe90cb607ad99e","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","window","navigator","userAgent","indexOf","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disable","disableMobile","enableSeconds","enableTime","errorHandler","err","console","warn","getWeek","givenDate","date","Date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","now","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","position","positionElement","undefined","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","wrap","$31b88ed29dff5211$export$33e6c23ebe2ee669","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","s","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","$31b88ed29dff5211$export$2e2bcd8739ae039","$10f9be9da0af1723$export$5d04458e2a6c373e","number","length","slice","$10f9be9da0af1723$export$7d260a2a5f8bc19e","bool","$10f9be9da0af1723$export$61fc7d43ac8f84b0","fn","wait","t","clearTimeout","setTimeout","apply","this","arguments","$10f9be9da0af1723$export$3131421a7d01b4fb","obj","Array","$0cca81f56373bc40$export$4a80062ca50b57c7","elem","className","classList","add","remove","$0cca81f56373bc40$export$c8a8987d4410bf2d","tag","content","e","document","createElement","textContent","$0cca81f56373bc40$export$51cfe97d637c237c","node","firstChild","removeChild","$0cca81f56373bc40$export$25245567f53f158f","condition","parentNode","$0cca81f56373bc40$export$afe9d610a3284048","inputClassName","opts","wrapper","numInput","arrowUp","arrowDown","type","pattern","key","setAttribute","appendChild","$0cca81f56373bc40$export$e58f029f0fbfdb29","event","composedPath","target","error","$2d69f8556d486dcb$var$doNothing","$2d69f8556d486dcb$export$27a2dd9af757e89c","monthNumber","$2d69f8556d486dcb$export$9490b78b888a863f","D","F","dateObj","monthName","setMonth","G","hour","parseFloat","H","J","day","K","getHours","RegExp","test","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","parseInt","Y","year","setFullYear","Z","ISODate","d","h","i","minutes","setMinutes","j","l","m","month","n","u","unixMillSeconds","w","y","$2d69f8556d486dcb$export$f5a8dc72fbf63af5","$2d69f8556d486dcb$export$55069460464ca7a9","toISOString","options","getMonth","getSeconds","getMinutes","String","substring","$ef3ae386b746b811$export$ff1a0b75284ac636","config","l10n","isMobile","frmt","overrideLocale","formatDate","split","map","c","arr","join","$ef3ae386b746b811$export$cfa2ef2687faeda2","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","format","datestr","trim","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","match","exec","val","forEach","isNaN","Error","$ef3ae386b746b811$export$c4c806e061935577","date1","date2","$ef3ae386b746b811$export$1f34108aa9eb96ab","$ef3ae386b746b811$export$6df0e87d3fffbd14","hours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","min","Object","assign","args","TypeError","source","keys","$f7516eac0efdbf39$var$FlatpickrInstance","element1","instanceConfig","self","$f7516eac0efdbf39$var$flatpickr","defaultConfig","bindToInstance","bind","setCalendarWidth","requestAnimationFrame","calendarContainer","style","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","defaults","getMilliseconds","latestSelectedDateObj","preventDefault","isKeyDown","eventTarget","input","getAttribute","max","step","curValue","value","delta","which","isHourElem","hourElement","isMinuteElem","minuteElement","newValue","incrementNumInput","abs","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","maxTime","maxDateHasTime","setHoursFromDate","onYearInput","toString","changeYear","element","handler","ev","el","addEventListener","_handlers","push","removeEventListener","triggerChange1","triggerEvent","jumpToDate","jumpDate","triggerChange","jumpTo","oldYear","currentYear","oldMonth","currentMonth","message","buildMonthSwitch","redraw","timeIncrement","contains","inputElem","createEvent","dispatchEvent","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","focus","onMouseOver","getFirstAvailableDay","startMonth","endMonth","children","startIndex","endIndex","focusOnDay","current","offset","dayFocused","isInView","activeElement","body","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","innerHTML","selected","buildMonth","container","monthNavFragment","monthElement","selectedMonth","yearInput","tabindex","yearElement","getElementsByTagName","disabled","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","splice","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isOpen","isInput","path","lostFocus","relatedTarget","isCalendarElement","isIgnored","some","timeContainer","close","clear","newYear","newYearNum","isNewYear","_a","dateToCheck","enable","array","parsed","from","to","onBlur","keyCode","blur","open","allowKeydown","allowInlineKeydown","isTimeObj","focusAndClose","selectDate","ctrlKey","stopPropagation","currentYearElement","elems","pluginElements","filter","x","shiftKey","charAt","toLowerCase","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","containsDisabled","maxRange","minRange","dayElem","timestamp","outOfRange","ts1","ts2","ts","onResize","positionCalendar","minMaxDateSetter","removeAttribute","inverseDateObj","getInputElem","querySelector","setupLocale","l10ns","default","JSON","parse","stringify","dataset","customPositionElement","_positionElement","calendarHeight","prototype","reduce","call","acc","child","offsetHeight","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","isCenter","isRight","right","rightMost","centerMost","doc","styleSheets","sheet","cssRules","editableSheet","head","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerBefore","centerAfter","centerIndex","centerStyle","insertRule","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","sort","a","b","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","destroy","lastChild","_type","k","click","wasOpen","select","set","option","CALLBACKS","setSelectedDate","toggle","inputDate","dates","rule","data","hooks","name","initEvent","getDateStr","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","formats","get","_enable","parseDateRules","timeMode","defaultDateFormat","defaultAltFormat","defineProperty","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","i1","pluginConf","concat","parseConfig","nodeName","placeholder","required","insertBefore","nextSibling","setupInputs","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","rContainer","separator","hourInput","minuteInput","military2ampm","secondInput","title","buildTime","customAppend","nodeType","build","evt","querySelectorAll","inputType","defaultValue","setupMobile","debouncedResize","ontouchstart","capture","selText","bindEvents","isSafari","init","$f7516eac0efdbf39$var$_flatpickr","nodeList","nodes","HTMLElement","_flatpickr","instances","HTMLCollection","NodeList","flatpickr","selector","Node","en","localize","setDefaults","compareDates","jQuery","fp_incr","$0d5e076f74e99e1f$var$input","$0d5e076f74e99e1f$var$btnStart","$0d5e076f74e99e1f$var$daysEl","$0d5e076f74e99e1f$var$hoursEl","$0d5e076f74e99e1f$var$minutesEl","$0d5e076f74e99e1f$var$secondsEl","$0d5e076f74e99e1f$var$endTime","$0d5e076f74e99e1f$var$inequalityTime","$0d5e076f74e99e1f$var$timerId","$0d5e076f74e99e1f$var$pad","padStart","$f7516eac0efdbf39$export$2e2bcd8739ae039","$parcel$interopDefault","$i27Ug","Notify","warning","setInterval","inMomentTime","clearInterval","ms","second","minute","floor","$0d5e076f74e99e1f$var$convertMs"],"version":3,"file":"02-timer.f0a7118f.js.map"}